@using System.Linq
@using MiInventario.Models
@model MiInventario.Models.Inventory.ManageViewModel
@{
  ViewBag.Title = "Inventory Manage";
}
<div class="col-lg-12">
  <h2>@ViewBag.Title <img id="imgLoading" src='@Url.Content("~/images/loading.gif")' style="vertical-align:baseline;height: 20px;display:none" /></h2>
</div>
<div class="form-horizontal col-lg-12">
  <div class="form-group">
    <div class="col-lg-12">
      @Html.DropDownList("Grouping", Model.Groups.Select(p => new SelectListItem() { Value = p.Key, Text = p.Value, Selected = false }), new { @id = "Groups", @class = "form-control input-sm" })
    </div>
  </div>
  <div class="form-group">
    <div class="col-lg-11">
      <button type="button" class="btn btn-primary edit">Edit</button>
      <button type="button" class="btn btn-default cancel edition" style="display:none" disabled>Cancel</button>
      <button type="button" class="btn btn-primary save edition" style="display:none" disabled>Save</button>
    </div>
  </div>
</div>
<div id="resultado"></div>
<div class="form-horizontal col-lg-12">
  <div class="form-group">
    <div class="col-lg-12">
      <button type="button" class="btn btn-primary edit">Edit</button>
      <button type="button" class="btn btn-default cancel edition" style="display:none" disabled>Cancel</button>
      <button type="button" class="btn btn-primary save edition" style="display:none" disabled>Save</button>
    </div>
  </div>
</div>
<div class="clearfix"></div>
@section scripts{
  <script src="~/bundles/inventory-render"></script>
  <script type="text/javascript">
    function ShowGroups(editing) {
      SetDisabled();

      $.ajax({
        url: editing ? '/Inventory/ItemsEdit' : '/Inventory/Items',
        method: 'POST',
        dataType: "json",
        data: { groupID: $('#Groups').val() },
        success: function (data) {
          var nuevosItems = ''

          if (!data.Result) {
            $('#resultado').html('<div class="col-lg-6 alert alert-dismissible alert-success"><button type="button" class="close" data-dismiss="alert">×</button>There are no items in this group</div>');
          }
          else {
            $.each(data.Groups, function (key, group) {
              $.each(group.Types, function (key, type) {
                if (editing) {
                  nuevosItems += RenderTypeEdit(type);
                }
                else {
                  nuevosItems += RenderType(type);
                }
              });
            });

            $('#resultado').html(nuevosItems);
          }

          if (editing) {
            SetEditing();
          }
          else {
            SetViewing();
            $('#Groups').focus();
          }
        },
        error: function (requestObject, error, errorThrown) {
          alert(errorThrown);
        },
      });
    }

    function SetDisabled() {
      $('#Groups').prop('disabled', true);
      $('.edit').prop('disabled', true);
      $('.edition').prop('disabled', true);
    }

    function SetViewing() {
      $('#Groups').prop('disabled', false);
      $('.edit').prop('disabled', false).show();
      $('.edition').hide();
    }

    function SetEditing() {
      $('#Groups').prop('disabled', true);
      $('.edit').prop('disabled', true).hide();
      $('.edition').prop('disabled', false).show();
    }

    function ChangeState(editing) {
      ShowGroups(editing);
      historyManager.setState();
    }

    $(document).ready(function () {
      $(document).ajaxStart(function () {
        $("#imgLoading").show();
      });

      $(document).ajaxStop(function () {
        $("#imgLoading").hide();
      });

      $('.edit').click(function () {
        ChangeState(true);
      });
      $('.cancel').click(function () {
        ChangeState(false);
      });

      $('.save').click(function () {
        SetDisabled();

        var items = [];
        $('.newQty').each(function (key, info) {
          var inp = $(info);
          var id = inp.data("itemid");
          var oldQty = inp.data("originalqty");
          var newQty = inp.val();

          if (parseInt(oldQty) != newQty) {
            item = { "ItemID": id, "Qty": newQty };
            items.push(item);
          }
        });

        if (items.length == 0) {
          ChangeState(false);
        }
        else {
          $.ajax({
            url: '/Inventory/SaveNewQty',
            method: 'POST',
            data: JSON.stringify({ "items": items }),
            contentType: 'application/json',
            traditional: true,
            success: function (data) {
              ChangeState(false);
            },
            error: function (requestObject, error, errorThrown) {
              alert(errorThrown);
            },
          });
        }
      });

      $('#Groups').change(function () {
        ChangeState(false);
      });

      $('#Groups').val('@Model.GroupID');
      ShowGroups(@Json.Encode(Model.Editing));

      historyManager.init({
        data: function () {
          var groupSel = $('#Groups');
          return { groupID: groupSel.val(), groupText: $("option:selected", groupSel).text(), editing: $('.edition').css('display') != 'none' };
        },
        title: function (data) {
          return '@ViewBag.Title ' + data.groupText + (data.editing ? ' [editing]' : '');
        },
        url: function (data) {
          return '/Inventory/Manage/' + data.groupID + '?editing=' + data.editing.toString();
        },
        change: function (data) {
          $('#Groups').val(data.groupID);
          ShowGroups(data.editing);
        }
      });
    });

  </script>
}

