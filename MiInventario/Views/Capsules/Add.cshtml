@model MiInventario.Models.Capsules.CreateViewModel
@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>
@foreach (var item in ViewContext.ViewData.ModelState)
{
    if (item.Value.Errors.Any())
    {
        <div class="alert alert-dismissible alert-warning">
            <button type="button" class="close" data-dismiss="alert">×</button>
            @(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)))
        </div>
    }
}

@using (Html.BeginForm("Add", "Capsules", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <fieldset>
        <div class="form-group">
            @Html.LabelFor(model => model.IdCapsula, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.TextBoxFor(model => model.IdCapsula, new { @class = "form-control text-uppercase input-sm" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control input-sm" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ItemID, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.DropDownListFor(model => model.ItemID, new SelectList(Model.Capsulas, "Key", "Value"), new { @class = "form-control input-sm" })
            </div>
        </div>
        <div class="col-lg-10 col-lg-offset-2">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </fieldset>
}
