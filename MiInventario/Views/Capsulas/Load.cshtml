@model MiInventario.Models.CapsulaLoadViewModel
@{
    ViewBag.Title = "Load Items";
}
<h2>Load Items</h2>
@if (string.IsNullOrEmpty(Model.Descripcion))
{
    <h3>@Model.IdCapsula (@Model.Total)</h3>
}
else
{
    <h3>@Model.Descripcion [@Model.IdCapsula] (@Model.Total)</h3>
}
@if (@Model.Total > 100)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <strong>Oh snap!</strong> La cantidad total de la cápsula supera lo permitido.
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <strong>Oh snap!</strong> @string.Join("; ", ViewData.ModelState.Values
                                        .SelectMany(x => x.Errors)
                                        .Select(x => x.ErrorMessage))
    </div>
}
@using (Html.BeginForm("Load", "Capsulas", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.HiddenFor(model => model.IdCapsula)
    @Html.HiddenFor(model => model.Total)

    <div class="col-lg-4 col-md-5 col-sm-6 col-xs-12">
        <table class="table table-condensed table-striped">
            <colgroup>
                <col class="col-lg-6 col-md-6 col-sm-6 col-xs-5" />
                <col class="col-lg-2 col-md-2 col-sm-2 col-xs-2" />
                <col class="col-lg-2 col-md-2 col-sm-2 col-xs-2" />
                <col class="col-lg-2 col-md-2 col-sm-2 col-xs-3" />
            </colgroup>
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Qty</th>
                    <th>Caps.</th>
                    <th>Unload</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    var item = Model.Items[i];
                    @Html.HiddenFor(model => Model.Items[i].CurrentItem.ItemID)
                    @Html.HiddenFor(model => Model.Items[i].CurrentItem.TypeID)
                    @Html.HiddenFor(model => Model.Items[i].CantidadSuelta)
                    @Html.HiddenFor(model => Model.Items[i].CantidadEnCapsula)
                    @Html.HiddenFor(model => Model.Items[i].CurrentItem.Level)
                    @Html.HiddenFor(model => Model.Items[i].CurrentItem.Rarity)
                    <tr>
                        <td class="nombre">
                            @Html.Partial("_ItemDescription", item)
                        </td>
                        <td class="cantidadItem">
                            @Html.DisplayFor(model => Model.Items[i].CantidadSuelta)
                        </td>
                        <td class="cantidadItem">
                            @if (Model.Items[i].CantidadEnCapsula > 0)
                            {
                                @String.Format("({0})", Model.Items[i].CantidadEnCapsula);
                            }
                        </td>
                        <td class="cantidadItem">
                            @if (item.CantidadSuelta > 0) {
                                @Html.TextBoxFor(model => Model.Items[i].CantidadCargar, new { @class = "form-control text-right input-sm" });
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="clearfix"></div>
    <p>
        <input type="submit" value="Save" class="btn btn-primary" />
    </p>
}
<div class="clearfix"></div>
<p>
    @Html.ActionLink("Back to Capsules", "Index") | @Html.ActionLink("Back to View Capsule", "List", new { @id = Model.IdCapsula })
</p>
