@model MiInventario.Models.CapsulasAddItemViewModel
@{
  ViewBag.Title = Model.IdCapsula;
}

<h2>Add Item to @Model.IdCapsula (@Model.Total)</h2>
@if (@Model.Total > 100) {
  <div class="alert alert-dismissible alert-danger">
    <button type="button" class="close" data-dismiss="alert">×</button>
    <strong>Oh snap!</strong> La cantidad total de la cápsula supera lo permitido.
  </div>
}
@foreach (var item in ViewContext.ViewData.ModelState)
{
    if (item.Value.Errors.Any())
    {
        <div class="alert alert-dismissible alert-danger">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <strong>Oh snap!</strong> @(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)))
        </div>
    }
}

@using (Html.BeginForm("AddItem", "Capsulas", FormMethod.Post, new { @class = "form-horizontal" })) {
  <fieldset>
    @Html.HiddenFor(model => model.IdCapsula)
    <div class="form-group">
      @Html.LabelFor(model => model.ItemID, new { @class = "col-lg-2 control-label" })
      <div class="col-lg-10">
        @Html.DropDownListFor(model => model.ItemID, new SelectList(Model.AddeableItems.Select(p => new { p.CurrentItem.ItemID, Descripcion = p.CurrentItem.Description() }), "ItemID", "Descripcion"), new { @class = "form-control input-sm" })
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Cantidad, new { @class = "col-lg-2 control-label" })
      <div class="col-lg-10">
        @Html.TextBoxFor(model => model.Cantidad, new { @class = "form-control input-sm" })
      </div>
    </div>
    <div class="col-lg-10 col-lg-offset-2">
      <input type="submit" value="Save" class="btn btn-primary" />
    </div>
  </fieldset>
}
<p>
  @Html.ActionLink("Back to Capsules", "Index") | @Html.ActionLink("Back to View Capsule", "List", new { @id = Model.IdCapsula })
</p>